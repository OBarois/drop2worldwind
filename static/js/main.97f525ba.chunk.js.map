{"version":3,"sources":["include/jquery.js","globe.js","dropZone.js","slideMenu.js","App.js","registerServiceWorker.js","index.js"],"names":["window","jQuery","$","Globe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","wwdCreated","currentProjection","addKML","bind","assertThisInitialized","handleKey","toggleProjection","clearGlobe","clearLastLayer","handlePaste","addHeatMap","handleDrop","event","preventDefault","e","key","LayersToRemove","wwd","layers","console","log","length","i","displayName","removeLayer","redraw","pop","url","context","WorldWind","KmlFile","then","kmlFile","renderableLayer","RenderableLayer","addRenderable","kmlLayer","addLayer","setState","data","jsonObject","JSON","parse","Array","isArray","hasOwnProperty","addGeoJson","GeoJSONParser","load","geometry","properties","configuration","attributes","ShapeAttributes","interiorColor","Color","outlineColor","wktString","Wkt","locations","type","push","MeasuredLocation","lon","lat","count","HeatMapLayer","geotiffObject","GeoTiffReader","readAsImage","canvas","surfaceGeoTiff","SurfaceImage","metadata","bbox","ImageSource","geotiffLayer","proj","supportedProjections","indexOf","globe","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","roundGlobe","clipboardData","isValidJSON","getData","addJson","addWkt","files","reader","FileReader","onload","result","readAsDataURL","addGeoTiff","name","endsWith","readAsText","elevationModel","EarthElevationModel","WorldWindow","navigator","minAllowedRange","wmsConfig","service","layerNames","numLevels","format","size","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","layer","WmsLayer","enabled","l","addEventListener","removeEventListener","react_default","a","createElement","className","id","style","width","height","React","Component","DropZone","_onDragEnter","_onDragLeave","_onDragOver","_onDrop","_onPaste","document","getElementById","stopPropagation","dataTransfer","refs","child0","children","Children","map","child","index","cloneElement","ref","concat","SlideMenu","BurgerMenu","styles","bmBurgerButton","position","left","top","bmBurgerBars","background","bmCrossButton","bmCross","bmMenu","padding","fontSize","overflow","bmMorphShape","fill","bmItemList","display","color","bmItem","bmOverlay","disableOverlayClick","noOverlay","App","isFull","goFull","ctrlKey","metaKey","_this2","dist_default","onChange","src_slideMenu","dropZone","src_globe","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.97f525ba.chunk.js","sourcesContent":["import * as $ from 'jquery'\n\nwindow.jQuery = window.$ = $","import React from 'react'\n\nimport './globe.css';\n\nimport WorldWind from '@nasaworldwind/worldwind'\n\n\n// ... other declarations here\n\nclass Globe extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            wwdCreated: false,\n            currentProjection: '3D',\n            //supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\" ]\n        };\n\n        //this.dropKML = this.dropKML.bind(this);\n        this.addKML = this.addKML.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleProjection = this.toggleProjection.bind(this);\n        this.clearGlobe = this.clearGlobe.bind(this);\n        this.clearLastLayer = this.clearLastLayer.bind(this);\n        this.handlePaste = this.handlePaste.bind(this);\n        this.addHeatMap = this.addHeatMap.bind(this);\n        this.handleDrop = this.handleDrop.bind(this);\n    }\n\n    showSettings (event) {\n        event.preventDefault();\n      }\n    \n\n    handleKey(e) {\n        switch (e.key) {\n            case \"p\": {\n                this.toggleProjection();\n                break;\n            }\n            case \"c\": {\n                this.clearLastLayer();\n                break;\n            }\n            case \"C\": {\n                this.clearGlobe();\n                break;\n            }\n            default:\n                break;\n        }\n    }\n\n    clearGlobe() {\n        let LayersToRemove = this.wwd.layers;\n        console.log(LayersToRemove.length);\n        //LayersToRemove.shift();\n        for(let i=0;i<LayersToRemove.length;i++) {\n            if(LayersToRemove[i].displayName) this.wwd.removeLayer(LayersToRemove[i]);\n        }\n        this.wwd.redraw();\n    }\n\n    clearLastLayer() {\n        let LayersToRemove = this.wwd.layers;\n        this.wwd.removeLayer(LayersToRemove.pop());\n        this.wwd.redraw();\n    }\n\n    addKML(url,context) {\n        var kmlFilePromise = new WorldWind.KmlFile(url, []);\n        kmlFilePromise.then(function (kmlFile) {\n            var renderableLayer = new WorldWind.RenderableLayer(\"Surface Shapes\");\n            renderableLayer.addRenderable(kmlFile);\n            context.wwd.removeLayer(context.state.kmlLayer);\n\n            context.wwd.addLayer(renderableLayer);\n            context.wwd.redraw();\n            context.setState({kmlLayer: renderableLayer});\n        });\n\n    }\n\n    addJson(data, context) {\n        console.log(data);\n        let jsonObject = JSON.parse(data);\n        if(!Array.isArray(jsonObject)) {\n            this.addGeoJson(data,this);\n        } else {\n            if(jsonObject[0].hasOwnProperty('count') && jsonObject[0].hasOwnProperty('lat') && jsonObject[0].hasOwnProperty('lon') ) {\n                //console.log(\"heat\");\n                this.addHeatMap(jsonObject,this);\n            }\n        }\n\n    }\n\n    addGeoJson(url, context) {\n        function shapeConfigurationCallback(geometry, properties) {\n            var configuration = {};\n            configuration.attributes = new WorldWind.ShapeAttributes(null);\n            configuration.attributes.interiorColor = new WorldWind.Color(0, 1, 1, 0.2);\n            configuration.attributes.outlineColor = new WorldWind.Color(1, 1, 1, 1);\n            return configuration;\n        }\n\n        let renderableLayer = new WorldWind.RenderableLayer(\"GeoJSON\");\n        context.wwd.addLayer(renderableLayer);\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(null, shapeConfigurationCallback, renderableLayer);\n        context.wwd.redraw();\n    }\n\n    addWkt(wktString, context) {\n        function shapeConfigurationCallback(geometry, properties) {\n            var configuration = {};\n            configuration.attributes = new WorldWind.ShapeAttributes(null);\n            configuration.attributes.interiorColor = new WorldWind.Color(0, 1, 1, 0.2);\n            configuration.attributes.outlineColor = new WorldWind.Color(1, 1, 1, 1);\n            return configuration;\n        }\n\n        let renderableLayer = new WorldWind.RenderableLayer(\"WKT\");\n        context.wwd.addLayer(renderableLayer);\n        let wkt = new WorldWind.Wkt(wktString);\n        wkt.load(null, shapeConfigurationCallback, renderableLayer);\n        context.wwd.redraw();\n    }\n\n    addHeatMap(jsonObject, context) {\n        var locations = [];\n        for(let i=0;i<jsonObject.length;i++) {\n            if(jsonObject[i].type == \"GRDH\") {\n                locations.push(                \n                    new WorldWind.MeasuredLocation(\n                        jsonObject[i].lon,\n                        jsonObject[i].lat,\n                        jsonObject[i].count\n                    )\n                );\n            }\n            //console.log(locations.length);\n            \n        }\n        context.wwd.addLayer(new WorldWind.HeatMapLayer(\"HeatMap\", locations));\n        context.wwd.redraw();\n    }\n\n    addGeoTiff(url, context) {\n        var geotiffObject = new WorldWind.GeoTiffReader(url);\n\n        geotiffObject.readAsImage(function (canvas) {\n            var surfaceGeoTiff = new WorldWind.SurfaceImage(\n                geotiffObject.metadata.bbox,\n                new WorldWind.ImageSource(canvas)\n            );\n\n            var geotiffLayer = new WorldWind.RenderableLayer(\"GeoTiff\");\n            geotiffLayer.addRenderable(surfaceGeoTiff);\n            context.wwd.addLayer(geotiffLayer);\n        });\n    }\n\n\n    toggleProjection(proj) {\n        let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n        this.setState({currentProjection:(proj)?proj:supportedProjections[(supportedProjections.indexOf(this.state.currentProjection)+ 1) % supportedProjections.length]});\n        switch (this.state.currentProjection) {\n        case \"3D\":\n            this.wwd.globe.projection = new WorldWind.ProjectionWgs84();\n            break;\n        case \"Equirectangular\":\n            this.wwd.globe.projection = new WorldWind.ProjectionEquirectangular();\n            break;\n        case \"Mercator\":\n            this.wwd.globe.projection = new WorldWind.ProjectionMercator();\n            break;\n        case \"North Polar\":\n            this.wwd.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n            break;\n        case \"South Polar\":\n            this.wwd.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n            break;\n        default:\n            this.wwd.globe = this.state.roundGlobe;\n        }\n        this.wwd.redraw();\n    }\n\n\n    \n    handlePaste(clipboardData) {\n        // detect if it is a geojson or a wkt\n        var isValidJSON = true; \n        try { JSON.parse(clipboardData.getData('Text')) } catch (e) { isValidJSON = false; }\n        \n        if(isValidJSON) {\n            this.addJson(clipboardData.getData('Text'),this);\n        } else {\n            this.addWkt(clipboardData.getData('Text'),this);\n        }\n    }\n\n    handleDrop(files) {\n        var reader = new FileReader();\n        var context = this;\n        \n        for(var i=0;i<files.length;i++) {\n            if(files[i].type === 'application/vnd.google-earth.kml+xml') {\n                reader.onload = (function() {\n                    //console.log(this.result);\n                    context.addKML(this.result,context);\n                });\n                reader.readAsDataURL(files[i]);\n            }\n\n            if(files[i].type === 'image/tiff') {\n                reader.onload = (function() {\n                    //console.log(this.result);\n                    context.addGeoTiff(this.result,context);\n                });\n                reader.readAsDataURL(files[i]);\n            }\n\n            if(files[i].name.endsWith('.geojson') || files[i].name.endsWith('.json')) {\n                reader.onload = (function() {\n                    //console.log(this.result);\n                    context.addJson(this.result,context);\n                });\n                reader.readAsText(files[i]);\n            }\n        }\n        \n    }\n\n    componentDidMount() {\n        if(!this.state.wwd) {\n            var elevationModel = new WorldWind.EarthElevationModel();\n            var wwd = new WorldWind.WorldWindow(\"globe\", elevationModel);\n            wwd.navigator.minAllowedRange = 15000;  // works using worlwind branch @ https://github.com/OBarois/WebWorldWind/tree/inertia \n            this.setState({\n                wwd: wwd, \n            });\n            this.wwd = wwd;\n\n            var wmsConfig = {\n                service: \"https://tiles.maps.eox.at/wms\",\n                layerNames: \"s2cloudless\",\n                numLevels: 19,\n                format: \"image/png\",\n                size: 256,\n                sector: WorldWind.Sector.FULL_SPHERE,\n                levelZeroDelta : new WorldWind.Location(90, 90)\n            };\n\n\n\n            var layers = [\n                {layer: new WorldWind.WmsLayer(wmsConfig,\"\"), enabled: true}\n            ];\n\n            for (var l = 0; l < layers.length; l++) {\n                layers[l].layer.enabled = layers[l].enabled;\n                wwd.addLayer(layers[l].layer);\n            }\n\n            window.addEventListener('keydown', this.handleKey);\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKey);\n    }\n\n    render() {\n        var globeStyle = {\n            width: \"100%\",\n            height: \"100%\"\n        }\n\n          \n          return (\n    \n            <div className=\"Globe\" id=\"outer-container\">\n                <canvas id=\"globe\"  style={globeStyle}></canvas>\n            </div>\n        )\n    }\n\n}\nexport default Globe","import React from 'react'\n\n// Re-usable DropZone component\nclass DropZone extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        className: 'drop-zone-hide'\n      }\n      this._onDragEnter = this._onDragEnter.bind(this);\n      this._onDragLeave = this._onDragLeave.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDrop = this._onDrop.bind(this);\n      this._onPaste = this._onPaste.bind(this);\n    }\n    \n    componentDidMount() {\n      window.addEventListener('mouseup', this._onDragLeave);\n      window.addEventListener('dragenter', this._onDragEnter);\n      window.addEventListener('dragover', this._onDragOver);\n      document.getElementById('dragbox').addEventListener('dragleave', this._onDragLeave);\n      window.addEventListener('drop', this._onDrop);\n      window.addEventListener('paste', this._onPaste);\n    }\n    \n    componentWillUnmount() {\n      window.removeEventListener('mouseup', this._onDragLeave);\n      window.removeEventListener('dragenter', this._onDragEnter);\n      window.addEventListener('dragover', this._onDragOver);\n      document.getElementById('dragbox').removeEventListener('dragleave', this._onDragLeave);\n      window.removeEventListener('drop', this._onDrop);\n      window.removeEventListener('paste', this._onPaste);\n\n    }\n    \n    _onDragEnter(e) {\n      this.setState({ className: 'drop-zone-show' });\n      e.stopPropagation();\n      e.preventDefault();\n      return false;\n    }\n    \n    _onDragOver(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n    \n    _onDragLeave(e) {\n      this.setState({className: 'drop-zone-hide'});\n      e.stopPropagation();\n      e.preventDefault();\n      return false;\n    }\n    \n    _onDrop(e) {\n      e.preventDefault();\n      let files = e.dataTransfer.files;\n      this.setState({files: files});\n      this.refs.child0.handleDrop(files);\n      this.setState({className: 'drop-zone-hide'});\n      return false;\n    }\n\n    _onPaste(e) {\n      e.preventDefault();\n      console.log(e.clipboardData.getData('Text') );\n      this.refs.child0.handlePaste(e.clipboardData);\n      return false;\n    }\n    \n    render() {\n        const children = React.Children.map(this.props.children,\n            (child, index) => React.cloneElement(child, {\n                ref : `child${index}`\n            })\n         );\n      \n    \n        return (\n            <div>\n                {children}\n                <div id=\"dragbox\" className={this.state.className}/>\n            </div>\n        );\n    }\n  }\n  \n  export default DropZone","import React from 'react'\n\nimport { slide as Menu } from 'react-burger-menu'\nimport './slideMenu.css';\n\nclass SlideMenu extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        };\n\n    }\n\n    componentDidMount() {};\n\n    componentWillUnmount() {};\n\n    render() {\n\n        var menuStyles = {\n            bmBurgerButton: {\n\t\t\t\tposition: 'fixed',\n\t\t\t\twidth: '36px',\n\t\t\t\theight: '30px',\n\t\t\t\tleft: '26px',\n\t\t\t\ttop: '26px'\n\t\t\t},\n            bmBurgerBars: {\n              \tbackground: '#373a47'\n            },\n            bmCrossButton: {\n\t\t\t\theight: '24px',\n\t\t\t\twidth: '24px'\n            },\n            bmCross: {\n\t              background: '#bdc3c7'\n            },\n            bmMenu: {\n\t\t\t\t//background: '#373a47',\n\t\t\t\tbackground: 'rgba(27, 59, 9, .7)',\n\t\t\t\tpadding: '3.5em 0.5em 0',\n\t\t\t\tfontSize: '1.5em',\n\t\t\t\toverflow: 'hidden'\n            },\n            bmMorphShape: {\n\t              fill: '#373a47'\n            },\n            bmItemList: {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tcolor: '#b8b7ad',\n\t\t\t\tpadding: '0.1em'\n            },\n            bmItem: {\n\t\t\t\tdisplay: 'block',\n\t\t\t\t//position: 'relative',\n\t\t\t\t//left: '10px',\n                //fontSize: '10px',\n            },\n            bmOverlay: {\n              background: 'rgba(0, 0, 0, 0.3)'\n            }\n          }\n        \n        return (\n            <div>\n            <Menu  styles={ menuStyles } disableOverlayClick noOverlay>\n                <div className=\"menuTitle\">Shortcuts</div>\n                <table>\n                    <tbody>\n                        <tr><td className=\"commandKey\">f</td>\n                        <td className=\"commandDesc\">Fullscreen</td></tr>\n                        <tr><td className=\"commandKey\">p</td>\n                        <td className=\"commandDesc\">Toggle projections</td></tr>\n                        <tr><td className=\"commandKey\">c</td>\n                        <td className=\"commandDesc\">Delete last item</td></tr>\n                        <tr><td className=\"commandKey\">C</td>\n                        <td className=\"commandDesc\">Delete all items</td></tr>\n                    </tbody>\n                </table>\n            </Menu>\n            </div>\n        )\n    }\n}\n \nexport default SlideMenu\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Globe from './globe'\nimport DropZone from \"./dropZone.js\"\nimport Fullscreen from \"react-full-screen\";\nimport SlideMenu from \"./slideMenu.js\"\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n \n    this.state = {\n      isFull: false,\n    };\n    this.goFull = this.goFull.bind(this);\n    this.handleKey = this.handleKey.bind(this);\n  }\n\n  \n  handleKey(e) {\n\n    // this prevents the paste event to be overitten\n    if (e.ctrlKey||e.metaKey) {\n      return false;\n    }\n\n    e.preventDefault();\n    switch (e.key) {\n      case \"f\": {\n        this.goFull();\n        break;\n      }\n      default:\n        break;\n    }\n    return false;\n  }\n\n  goFull() {\n    this.setState({ isFull: true });\n  }\n\n\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKey);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKey);\n  }\n\n  render() {\n    return (\n      <div  className=\"App\">\n        <Fullscreen enabled={this.state.isFull} onChange={isFull => this.setState({isFull})}>\n          <SlideMenu/>\n          <DropZone>\n              <Globe/>\n          </DropZone>\n        </Fullscreen>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './include/jquery';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}